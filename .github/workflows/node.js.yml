name: Build & Publish

on:
  release:
    types: [published]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "publish-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build-and-publish:
    name: Build, Test & Publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          scope: '@converso-empire'
      
      - name: Verify version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch: package.json ($PACKAGE_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi
          echo "✅ Version verified: $PACKAGE_VERSION"
      
      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
        continue-on-error: false
      
      - name: Build packages
        run: npm run build
      
      - name: Run tests
        run: npm test
        env:
          CI: true
      
      - name: Check package contents
        run: |
          npm pack --dry-run
          echo "✅ Package validation successful"
      
      - name: Publish to NPM
        run: |
          npm publish --access public --provenance
          echo "✅ Published @converso-empire/conso to NPM successfully"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Wait for NPM propagation
        run: |
          echo "⏳ Waiting for NPM registry propagation..."
          sleep 30
      
      - name: Verify NPM publication
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          MAX_RETRIES=5
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if npm view ${PACKAGE_NAME}@${PACKAGE_VERSION} version > /dev/null 2>&1; then
              echo "✅ Package ${PACKAGE_NAME}@${PACKAGE_VERSION} is available on NPM"
              exit 0
            fi
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "⏳ Attempt $RETRY_COUNT/$MAX_RETRIES: Package not yet available, waiting..."
            sleep 10
          done
          
          echo "⚠️ Could not verify package on NPM after $MAX_RETRIES attempts"
          exit 1
      
      - name: Deploy Documentation
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./apps/docs/out
          commit_message: "docs: deploy ${{ github.event.release.tag_name }}"
      
      - name: Deploy to Vercel
        if: success()
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/docs
          vercel-args: '--prod'
      
      - name: Create Release Summary
        if: success()
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## 🎉 Release Published Successfully!
          
          **Version:** \`${{ github.event.release.tag_name }}\`  
          **Package:** \`${PACKAGE_NAME}@${PACKAGE_VERSION}\`  
          **Registry:** [View on NPM](https://www.npmjs.com/package/${PACKAGE_NAME}/v/${PACKAGE_VERSION})  
          **Release:** [View Release](${{ github.event.release.html_url }})
          
          ### ✅ Completed Tasks
          
          - ✓ Code checkout and validation
          - ✓ Dependencies installed
          - ✓ Linting passed
          - ✓ Build successful
          - ✓ Tests passed
          - ✓ Package published to NPM
          - ✓ Documentation deployed to GitHub Pages
          - ✓ Documentation deployed to Vercel
          
          ### 📦 Installation
          
          \`\`\`bash
          npm install ${PACKAGE_NAME}@${PACKAGE_VERSION}
          \`\`\`
          
          ### 🚀 Quick Start
          
          \`\`\`javascript
          import conso from '${PACKAGE_NAME}';
          
          // Your code here
          \`\`\`
          
          ---
          
          🌍 **Converso Empire** - Empire of Innovation, Creativity & Intelligence
          EOF
      
      - name: Notify on failure
        if: failure()
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## ❌ Release Failed
          
          The release process encountered an error. Please review the logs above.
          
          ### 🔍 Troubleshooting Guide
          
          **Authentication Issues:**
          - Verify `NPM_TOKEN` secret is set and valid
          - Check token has publish permissions for @converso-empire organization
          - Ensure token hasn't expired
          
          **Version Conflicts:**
          - Version already exists on NPM (republishing same version not allowed)
          - package.json version doesn't match git tag
          
          **Build/Test Failures:**
          - Check for failing tests in the logs
          - Review build errors
          - Verify all dependencies are compatible
          
          **Dependency Issues:**
          - package-lock.json may be out of sync
          - Run `npm install` locally and commit changes
          
          **Organization Access:**
          - Verify you have publish rights to @converso-empire organization
          - Check NPM token has organization-level permissions
          
          **Documentation Deployment:**
          - Verify `ACTIONS_DEPLOY_KEY` is configured
          - Check docs build output exists at `./apps/docs/out`
          
          **Vercel Deployment:**
          - Verify `VERCEL_TOKEN`, `VERCEL_ORG_ID`, and `VERCEL_PROJECT_ID` secrets are set
          - Check Vercel project is properly configured
          - Ensure docs build completed successfully
          
          ### 🛠️ Next Steps
          
          1. Review the failed step in the workflow logs
          2. Fix the issue locally
          3. Create a new release with incremented version
          EOF
      
      - name: Update Release with Publication Info
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const packageName = require('./package.json').name;
            const version = require('./package.json').version;
            const release = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });
            
            const publicationNote = `\n\n---\n\n✅ **Successfully published to NPM!**\n\n📦 **Install:** \`npm install ${packageName}@${version}\`\n\n🔗 **NPM Package:** https://www.npmjs.com/package/${packageName}/v/${version}\n\n🌍 **Converso Empire** - Empire of Innovation, Creativity & Intelligence`;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: release.data.body + publicationNote
            });